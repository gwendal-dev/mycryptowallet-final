{"ast":null,"code":"var Highcharts = require('highcharts');\n\nrequire('highcharts/highcharts');\n\nrequire('highcharts/modules/exporting')(Highcharts); // Create the chart\n\n\nrequire('highcharts/modules/export-data')(Highcharts);\n\nrequire('highcharts/modules/accessibility')(Highcharts);\n\nvar chart = function chart() {\n  var i = 0;\n  var container = document.querySelector('#container'); // Make monochrome colors\n\n  var pieColors = function () {\n    var colors = [],\n        base = Highcharts.getOptions().colors[0],\n        i;\n\n    for (i = 0; i < 10; i += 1) {\n      // Start out with a darkened base color (negative brighten), and end\n      // up with a much brighter color\n      colors.push(Highcharts.color(base).brighten((i - 3) / 7).get());\n    }\n\n    return colors;\n  }(); // Build the chart\n\n\n  Highcharts.chart('container', {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: 'pie'\n    },\n    title: {\n      text: 'MY Crypto Wallet'\n    },\n    tooltip: {\n      pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n    },\n    accessibility: {\n      point: {\n        valueSuffix: '%'\n      }\n    },\n    plotOptions: {\n      pie: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        colors: pieColors,\n        dataLabels: {\n          enabled: true,\n          format: '<b>{point.name}</b><br>{point.percentage:.1f} %',\n          distance: -50,\n          filter: {\n            property: 'percentage',\n            operator: '>',\n            value: 4\n          }\n        }\n      }\n    },\n    series: [{\n      innerSize: '60%',\n      name: 'Share',\n      data: [{\n        name: JSON.parse(container.dataset.coins)[JSON.parse(container.dataset.positions)[0].coin_id - 1].title,\n        y: JSON.parse(container.dataset.positions)[0].quantity * JSON.parse(container.dataset.coins[JSON.parse(container.dataset.positions)[0].coin_id - 1].price)\n      }, {\n        name: JSON.parse(container.dataset.coins)[JSON.parse(container.dataset.positions)[1].coin_id - 1].title,\n        y: JSON.parse(container.dataset.positions)[1].quantity * JSON.parse(container.dataset.coins[JSON.parse(container.dataset.positions)[1].coin_id - 1].price)\n      }]\n    }]\n  });\n};\n\nexport { chart };","map":{"version":3,"sources":["/Users/gwendal/Desktop/mycryptowallet-final/app/javascript/plugins/chart.js"],"names":["Highcharts","require","chart","i","container","document","querySelector","pieColors","colors","base","getOptions","push","color","brighten","get","plotBackgroundColor","plotBorderWidth","plotShadow","type","title","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","distance","filter","property","operator","value","series","innerSize","name","data","JSON","parse","dataset","coins","positions","coin_id","y","quantity","price"],"mappings":"AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACAA,OAAO,CAAC,uBAAD,CAAP;;AACAA,OAAO,CAAC,8BAAD,CAAP,CAAwCD,UAAxC,E,CACA;;;AACAC,OAAO,CAAC,gCAAD,CAAP,CAA0CD,UAA1C;;AACAC,OAAO,CAAC,kCAAD,CAAP,CAA4CD,UAA5C;;AAEA,IAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,MAAIC,CAAC,GAAG,CAAR;AACA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAlB,CAFkB,CAIZ;;AACN,MAAIC,SAAS,GAAI,YAAY;AACzB,QAAIC,MAAM,GAAG,EAAb;AAAA,QACIC,IAAI,GAAGT,UAAU,CAACU,UAAX,GAAwBF,MAAxB,CAA+B,CAA/B,CADX;AAAA,QAEIL,CAFJ;;AAIA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,IAAI,CAAzB,EAA4B;AACxB;AACA;AACAK,MAAAA,MAAM,CAACG,IAAP,CAAYX,UAAU,CAACY,KAAX,CAAiBH,IAAjB,EAAuBI,QAAvB,CAAgC,CAACV,CAAC,GAAG,CAAL,IAAU,CAA1C,EAA6CW,GAA7C,EAAZ;AACH;;AACD,WAAON,MAAP;AACH,GAXgB,EAAjB,CALkB,CAiBlB;;;AACAR,EAAAA,UAAU,CAACE,KAAX,CAAiB,WAAjB,EAA8B;AAC1BA,IAAAA,KAAK,EAAE;AACHa,MAAAA,mBAAmB,EAAE,IADlB;AAEHC,MAAAA,eAAe,EAAE,IAFd;AAGHC,MAAAA,UAAU,EAAE,KAHT;AAIHC,MAAAA,IAAI,EAAE;AAJH,KADmB;AAO1BC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE;AADH,KAPmB;AAU1BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,WAAW,EAAE;AADR,KAViB;AAa1BC,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE;AACHC,QAAAA,WAAW,EAAE;AADV;AADI,KAbW;AAkB1BC,IAAAA,WAAW,EAAE;AACTC,MAAAA,GAAG,EAAE;AACDC,QAAAA,gBAAgB,EAAE,IADjB;AAEDC,QAAAA,MAAM,EAAE,SAFP;AAGDrB,QAAAA,MAAM,EAAED,SAHP;AAIDuB,QAAAA,UAAU,EAAE;AACRC,UAAAA,OAAO,EAAE,IADD;AAERC,UAAAA,MAAM,EAAE,iDAFA;AAGRC,UAAAA,QAAQ,EAAE,CAAC,EAHH;AAIRC,UAAAA,MAAM,EAAE;AACJC,YAAAA,QAAQ,EAAE,YADN;AAEJC,YAAAA,QAAQ,EAAE,GAFN;AAGJC,YAAAA,KAAK,EAAE;AAHH;AAJA;AAJX;AADI,KAlBa;AAmC1BC,IAAAA,MAAM,EAAE,CAAC;AACLC,MAAAA,SAAS,EAAE,KADN;AAELC,MAAAA,IAAI,EAAE,OAFD;AAGLC,MAAAA,IAAI,EAAE,CACF;AAAED,QAAAA,IAAI,EAAEE,IAAI,CAACC,KAAL,CAAWvC,SAAS,CAACwC,OAAV,CAAkBC,KAA7B,EAAoCH,IAAI,CAACC,KAAL,CAAWvC,SAAS,CAACwC,OAAV,CAAkBE,SAA7B,EAAwC,CAAxC,EAA2CC,OAA3C,GAAqD,CAAzF,EAA4F5B,KAApG;AAA2G6B,QAAAA,CAAC,EAAEN,IAAI,CAACC,KAAL,CAAWvC,SAAS,CAACwC,OAAV,CAAkBE,SAA7B,EAAwC,CAAxC,EAA2CG,QAA3C,GAAsDP,IAAI,CAACC,KAAL,CAAWvC,SAAS,CAACwC,OAAV,CAAkBC,KAAlB,CAAwBH,IAAI,CAACC,KAAL,CAAWvC,SAAS,CAACwC,OAAV,CAAkBE,SAA7B,EAAwC,CAAxC,EAA2CC,OAA3C,GAAqD,CAA7E,EAAgFG,KAA3F;AAApK,OADE,EAEF;AAAEV,QAAAA,IAAI,EAAEE,IAAI,CAACC,KAAL,CAAWvC,SAAS,CAACwC,OAAV,CAAkBC,KAA7B,EAAoCH,IAAI,CAACC,KAAL,CAAWvC,SAAS,CAACwC,OAAV,CAAkBE,SAA7B,EAAwC,CAAxC,EAA2CC,OAA3C,GAAqD,CAAzF,EAA4F5B,KAApG;AAA2G6B,QAAAA,CAAC,EAAEN,IAAI,CAACC,KAAL,CAAWvC,SAAS,CAACwC,OAAV,CAAkBE,SAA7B,EAAwC,CAAxC,EAA2CG,QAA3C,GAAsDP,IAAI,CAACC,KAAL,CAAWvC,SAAS,CAACwC,OAAV,CAAkBC,KAAlB,CAAwBH,IAAI,CAACC,KAAL,CAAWvC,SAAS,CAACwC,OAAV,CAAkBE,SAA7B,EAAwC,CAAxC,EAA2CC,OAA3C,GAAqD,CAA7E,EAAgFG,KAA3F;AAApK,OAFE;AAHD,KAAD;AAnCkB,GAA9B;AA4CD,CA9DD;;AAgEA,SAAQhD,KAAR","sourcesContent":["\nvar Highcharts = require('highcharts');\nrequire('highcharts/highcharts');\nrequire('highcharts/modules/exporting')(Highcharts);\n// Create the chart\nrequire('highcharts/modules/export-data')(Highcharts);\nrequire('highcharts/modules/accessibility')(Highcharts);\n\nconst chart = () => {\n  let i = 0;\n  const container = document.querySelector('#container');\n\n        // Make monochrome colors\n  var pieColors = (function () {\n      var colors = [],\n          base = Highcharts.getOptions().colors[0],\n          i;\n\n      for (i = 0; i < 10; i += 1) {\n          // Start out with a darkened base color (negative brighten), and end\n          // up with a much brighter color\n          colors.push(Highcharts.color(base).brighten((i - 3) / 7).get());\n      }\n      return colors;\n  }());\n  // Build the chart\n  Highcharts.chart('container', {\n      chart: {\n          plotBackgroundColor: null,\n          plotBorderWidth: null,\n          plotShadow: false,\n          type: 'pie'\n      },\n      title: {\n          text: 'MY Crypto Wallet'\n      },\n      tooltip: {\n          pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      accessibility: {\n          point: {\n              valueSuffix: '%'\n          }\n      },\n      plotOptions: {\n          pie: {\n              allowPointSelect: true,\n              cursor: 'pointer',\n              colors: pieColors,\n              dataLabels: {\n                  enabled: true,\n                  format: '<b>{point.name}</b><br>{point.percentage:.1f} %',\n                  distance: -50,\n                  filter: {\n                      property: 'percentage',\n                      operator: '>',\n                      value: 4\n                  }\n              }\n          }\n      },\n      series: [{\n          innerSize: '60%',\n          name: 'Share',\n          data: [\n              { name: JSON.parse(container.dataset.coins)[JSON.parse(container.dataset.positions)[0].coin_id - 1].title, y: JSON.parse(container.dataset.positions)[0].quantity * JSON.parse(container.dataset.coins[JSON.parse(container.dataset.positions)[0].coin_id - 1].price) },\n              { name: JSON.parse(container.dataset.coins)[JSON.parse(container.dataset.positions)[1].coin_id - 1].title, y: JSON.parse(container.dataset.positions)[1].quantity * JSON.parse(container.dataset.coins[JSON.parse(container.dataset.positions)[1].coin_id - 1].price) },\n          ]\n      }]\n  });\n}\n\nexport {chart}\n"]},"metadata":{},"sourceType":"module"}