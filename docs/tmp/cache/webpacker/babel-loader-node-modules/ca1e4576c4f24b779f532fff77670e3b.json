{"ast":null,"code":"var i = 0;\n\nfunction updatechart() {\n  container.addEventListener('click', function () {\n    console.log(JSON.parse(container.dataset.positions)[i].quantity);\n    charts.series[0].addPoint({\n      name: JSON.parse(container.dataset.coins)[JSON.parse(container.dataset.positions)[i].coin_id - 1].title,\n      y: JSON.parse(container.dataset.positions)[i].quantity * JSON.parse(container.dataset.coins)[JSON.parse(container.dataset.positions)[i].coin_id - 1].price\n    });\n  });\n  i += 1;\n}","map":{"version":3,"sources":["/Users/gwendal/Desktop/mycryptowallet-final/app/javascript/plugins/update_chart.js"],"names":["i","updatechart","container","addEventListener","console","log","JSON","parse","dataset","positions","quantity","charts","series","addPoint","name","coins","coin_id","title","y","price"],"mappings":"AAAA,IAAIA,CAAC,GAAG,CAAR;;AACE,SAASC,WAAT,GAAuB;AACrBC,EAAAA,SAAS,CAACC,gBAAV,CAA2B,OAA3B,EAAoC,YAAW;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWL,SAAS,CAACM,OAAV,CAAkBC,SAA7B,EAAwCT,CAAxC,EAA2CU,QAAvD;AACAC,IAAAA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,QAAjB,CAA0B;AACxBC,MAAAA,IAAI,EAAER,IAAI,CAACC,KAAL,CAAWL,SAAS,CAACM,OAAV,CAAkBO,KAA7B,EAAoCT,IAAI,CAACC,KAAL,CAAWL,SAAS,CAACM,OAAV,CAAkBC,SAA7B,EAAwCT,CAAxC,EAA2CgB,OAA3C,GAAqD,CAAzF,EAA4FC,KAD1E;AAExBC,MAAAA,CAAC,EAAEZ,IAAI,CAACC,KAAL,CAAWL,SAAS,CAACM,OAAV,CAAkBC,SAA7B,EAAwCT,CAAxC,EAA2CU,QAA3C,GAAsDJ,IAAI,CAACC,KAAL,CAAWL,SAAS,CAACM,OAAV,CAAkBO,KAA7B,EAAoCT,IAAI,CAACC,KAAL,CAAWL,SAAS,CAACM,OAAV,CAAkBC,SAA7B,EAAwCT,CAAxC,EAA2CgB,OAA3C,GAAqD,CAAzF,EAA4FG;AAF7H,KAA1B;AAID,GANC;AAOFnB,EAAAA,CAAC,IAAI,CAAL;AACD","sourcesContent":["let i = 0\n  function updatechart() {\n    container.addEventListener('click', function() {\n    console.log(JSON.parse(container.dataset.positions)[i].quantity);\n    charts.series[0].addPoint({\n      name: JSON.parse(container.dataset.coins)[JSON.parse(container.dataset.positions)[i].coin_id - 1].title,\n      y: JSON.parse(container.dataset.positions)[i].quantity * JSON.parse(container.dataset.coins)[JSON.parse(container.dataset.positions)[i].coin_id - 1].price\n    });\n  });\n  i += 1;\n}\n"]},"metadata":{},"sourceType":"module"}